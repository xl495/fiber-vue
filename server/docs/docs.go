// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "hxl",
            "email": "52553624@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功创建用户并返回新创建的用户信息",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "JWTAuthToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "创建一个新的系统用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "创建用户",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功创建用户并返回新创建的用户信息",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.UserLoginReq": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "密码\nrequired: true\nexample: 123456",
                    "type": "string"
                },
                "username": {
                    "description": "用户名\nrequired: true\nexample: admin",
                    "type": "string"
                }
            }
        },
        "controller.UserReq": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "密码\nrequired: true\nexample: 123456",
                    "type": "string"
                },
                "username": {
                    "description": "用户名\nrequired: true\nexample: admin",
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "Avatar URL of the user\nexample: http://xx\nrequired: false",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "description": "Email of the user\nformat: email\nrequired: false",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "description": "Nickname of the user\nexample: JohnDoe\nrequired: false",
                    "type": "string"
                },
                "password": {
                    "description": "Password of the user\nrequired: true",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone number of the user\nformat: int64\nrequired: false",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "description": "Username of the user\nexample: xxxxx\nrequired: true",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Fiber Admin App",
	Description:      "This is an API for Fiber Admin Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
